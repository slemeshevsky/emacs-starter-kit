#+TITLE: Auctex configuration
* Включение =auctex=
#+begin_src emacs-lisp
(require 'tex-site)
#+end_src
* Добавление расширений для ~LaTeX-mode~
#+begin_src emacs-lisp
(add-to-list 'auto-mode-alist '("\\.rtx\\'" . LaTeX-mode))
#+end_src
* Подключение RefTeX
#+begin_src emacs-lisp
(add-hook 'LaTeX-mode-hook 'turn-on-reftex)   ; with AUCTeX LaTeX mode
(add-hook 'latex-mode-hook 'turn-on-reftex)   ; with Emacs latex mode
;(add-to-list 'reftex-default-label-alist-entries 'AMSTeX)
#+end_src
* Включение сервера и synctex для прямого/обратного поиска
#+begin_src emacs-lisp
(setq TeX-source-correlate-method (quote synctex))
(setq TeX-source-correlate-mode t)
(setq TeX-source-correlate-start-server t)
#+end_src

* Режим генерации PDF
#+begin_src emacs-lisp
(setq TeX-PDF-mode t)
(setq TeX-engine 'xetex)
#+end_src

* Используем =pdf-tools= для просмотра PDF
#+begin_src emacs-lisp
(add-hook 'LaTeX-mode-hook 'pdf-tools-install)
(setq TeX-view-program-selection '((output-pdf "pdf-tools"))
      TeX-source-correlate-start-server t)
(setq TeX-view-program-list '(("pdf-tools" "TeX-pdf-tools-sync-view")))
(setq mouse-wheel-follow-mouse t)
#+end_src

* Обновляем PDF после успешной работы LaTeX
#+begin_src emacs-lisp
(add-hook 'TeX-after-compilation-finished-functions
		#'TeX-revert-document-buffer)
#+end_src

* Кавычки-ёлочки
#+begin_src emacs-lisp
(setq TeX-open-quote "<<")
(setq TeX-close-quote ">>")
#+end_src

* Клавиши для =TeX-next-error=
#+begin_src emacs-lisp
(add-hook 'LaTeX-mode-hook
          (lambda () (local-set-key (kbd "C-c !") 'TeX-next-error)))
#+end_src

* Прямой/обратный поиск с evence с использованием D-bus.
#+begin_src emacs-lisp
  ;; (setq TeX-view-program-list (quote (("Okular" "okular --unique %o#src:%n'pwd'/./%b"))))
  ;; (setq TeX-view-program-selection (quote ((output-pdf "Okular") ((output-dvi style-pstricks) "dvips and gv") (output-dvi "xdvi") (output-pdf "xpdf") (output-html "xdg-open"))))
  ;; (if (require 'dbus "dbus" t)
  ;;     (progn
  ;;       ;; universal time, need by evince
  ;;       (defun utime ()
  ;; 	(let ((high (nth 0 (current-time)))
  ;; 	      (low (nth 1 (current-time))))
  ;; 	  (+ (* high (lsh 1 16) ) low)))

  ;;       ;; Forward search.
  ;;       ;; Adapted from http://dud.inf.tu-dresden.de/~ben/evince_synctex.tar.gz
  ;;       (defun auctex-evince-forward-sync (pdffile texfile line)
  ;;         (let* ((dbus-name
  ;; 			   (dbus-call-method :session
  ;;                                  "org.gnome.evince.Daemon"  ; service
  ;;                                  "/org/gnome/evince/Daemon" ; path
  ;;                                  "org.gnome.evince.Daemon"  ; interface
  ;;                                  "FindDocument"
  ;;                                  (concat "file://" pdffile)
  ;;                                  t         ; Open a new window if the file is not opened.
  ;;                                  ))
  ;;               (time (current-time))
  ;;               (high (car time))
  ;;               (low (cadr time))
  ;;               (timestamp (+ (* high (expt 2 16)) low)))
  ;;          (dbus-call-method :session
  ;; 			   dbus-name
  ;; 			   "/org/gnome/evince/Window/0"
  ;; 			   "org.gnome.evince.Window"
  ;; 			   "SyncView"
  ;; 			   texfile
  ;; 			   (list :struct :int32 line :int32 1)
  ;; 			   (utime))))

  ;;       (defun auctex-evince-view ()
  ;;         (let ((pdf (file-truename (concat default-directory
  ;;                           (TeX-master-file (TeX-output-extension)))))
  ;;           (tex (buffer-file-name))
  ;;           (line (line-number-at-pos)))
  ;;           (auctex-evince-forward-sync pdf tex line)))

  ;;       ;; New view entry: Evince via D-bus.
  ;;       (add-to-list 'TeX-view-program-list
  ;; 			   '("EvinceDbus" auctex-evince-view))

  ;;       ;; Prepend Evince via D-bus to program selection list
  ;;       ;; overriding other settings for PDF viewing.
  ;;       (add-to-list 'TeX-view-program-selection
  ;; 			   '(output-pdf "EvinceDbus"))

  ;;       ;; Inverse search.
  ;;       ;; Adapted from: http://www.mail-archive.com/auctex@gnu.org/msg04175.html 
  ;;       (defun auctex-evince-inverse-sync (file linecol timestamp)
  ;;         (let ((buf (get-buffer (file-name-nondirectory file)))
  ;;           (line (car linecol))
  ;;           (col (cadr linecol)))
  ;;           (if (null buf)
  ;;           (message "Sorry, %s is not opened..." file)
  ;;         (switch-to-buffer buf)
  ;;         (goto-line (car linecol))
  ;;         (unless (= col -1)
  ;;           (move-to-column col)))))

  ;;       (dbus-register-signal
  ;; 	   :session nil "/org/gnome/evince/Window/0"
  ;; 	   "org.gnome.evince.Window" "SyncSource"
  ;; 	   'auctex-evince-inverse-sync)))
#+end_src
